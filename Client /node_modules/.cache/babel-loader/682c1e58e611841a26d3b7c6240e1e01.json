{"ast":null,"code":"export function getTranslateValues(element){var style=window.getComputedStyle(element);var matrix=style[\"transform\"]||style.webkitTransform||style.mozTransform;// No transform property. Simply return 0 values.\nif(matrix===\"none\"||typeof matrix===\"undefined\"){return{x:0,y:0,z:0};}// Can either be 2d or 3d transform\nvar matrixType=matrix.includes(\"3d\")?\"3d\":\"2d\";var matrixValues=matrix.match(/matrix.*\\((.+)\\)/)[1].split(\", \");// 2d matrices have 6 values\n// Last 2 values are X and Y.\n// 2d matrices does not have Z value.\nif(matrixType===\"2d\"){return{x:matrixValues[4],y:matrixValues[5],z:0};}// 3d matrices have 16 values\n// The 13th, 14th, and 15th values are X, Y, and Z\nif(matrixType===\"3d\"){return{x:matrixValues[12],y:matrixValues[13],z:matrixValues[14]};}}export var movePlateUp=function movePlateUp(_ref){var currentTimeStamp=_ref.currentTimeStamp,start=_ref.start,previousTimeStamp=_ref.previousTimeStamp,fromTowerRef=_ref.fromTowerRef,requestId=_ref.requestId,doneMoveUpCallback=_ref.doneMoveUpCallback;var plate=fromTowerRef&&fromTowerRef.querySelector(\".plate-track\");if(!plate)return;var maxHeight=fromTowerRef.offsetHeight-(fromTowerRef.childElementCount-1)*13;if(start===undefined)start=currentTimeStamp;var elapsed=currentTimeStamp-start;if(previousTimeStamp!==currentTimeStamp){var count=Math.min(0.7*elapsed,maxHeight);plate.style.transform=\"translateY(\"+-count+\"px)\";if(count<maxHeight){previousTimeStamp=currentTimeStamp;requestId=window.requestAnimationFrame(function(timeStamp){movePlateUp({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,requestId:requestId,doneMoveUpCallback:doneMoveUpCallback});});}else{start=previousTimeStamp;doneMoveUpCallback&&doneMoveUpCallback();}}};export var movePlateHorizontal=function movePlateHorizontal(_ref2){var currentTimeStamp=_ref2.currentTimeStamp,start=_ref2.start,previousTimeStamp=_ref2.previousTimeStamp,fromTowerRef=_ref2.fromTowerRef,toTowerRef=_ref2.toTowerRef,requestId=_ref2.requestId,doneMoveHorizontalCallback=_ref2.doneMoveHorizontalCallback;var plate=fromTowerRef&&fromTowerRef.querySelector(\".plate-track\");if(!plate)return;var distanceDiff=fromTowerRef.getBoundingClientRect().left-toTowerRef.getBoundingClientRect().left;if(start===undefined)start=currentTimeStamp;var elapsed=currentTimeStamp-start;if(previousTimeStamp!==currentTimeStamp){var _getTranslateValues;var count=Math.min(0.5*elapsed,Math.abs(distanceDiff));count=distanceDiff>0?-count:count;var previousTranslateY=(_getTranslateValues=getTranslateValues(plate))===null||_getTranslateValues===void 0?void 0:_getTranslateValues.y;plate.style.transform=\"translate(\".concat(count,\"px, \").concat(previousTranslateY,\"px)\");if(Math.abs(count)<Math.abs(distanceDiff)){previousTimeStamp=currentTimeStamp;requestId=window.requestAnimationFrame(function(timeStamp){movePlateHorizontal({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,toTowerRef:toTowerRef,requestId:requestId,doneMoveHorizontalCallback:doneMoveHorizontalCallback});});}else{start=previousTimeStamp;doneMoveHorizontalCallback&&doneMoveHorizontalCallback();}}};export var movePlateDown=function movePlateDown(_ref3){var currentTimeStamp=_ref3.currentTimeStamp,start=_ref3.start,previousTimeStamp=_ref3.previousTimeStamp,fromTowerRef=_ref3.fromTowerRef,toTowerRef=_ref3.toTowerRef,requestId=_ref3.requestId,doneMoveDownCallback=_ref3.doneMoveDownCallback;var plate=fromTowerRef&&fromTowerRef.querySelector(\".plate-track\");if(!plate)return;var maxDistanceToMove=toTowerRef.offsetHeight-toTowerRef.childElementCount*13;if(start===undefined)start=currentTimeStamp;var elapsed=currentTimeStamp-start;if(previousTimeStamp!==currentTimeStamp){var _getTranslateValues2;var count=0.7*elapsed;count=count<=maxDistanceToMove?count:maxDistanceToMove;var previousTranslateX=(_getTranslateValues2=getTranslateValues(plate))===null||_getTranslateValues2===void 0?void 0:_getTranslateValues2.x;var finalTranslateY=-toTowerRef.offsetHeight+13+13+count+(fromTowerRef.childElementCount-3)*13;if(fromTowerRef===toTowerRef){finalTranslateY=finalTranslateY+13;}plate.style.transform=\"translate(\".concat(previousTranslateX,\"px, \").concat(finalTranslateY,\"px)\");if(count<maxDistanceToMove){previousTimeStamp=currentTimeStamp;requestId=window.requestAnimationFrame(function(timeStamp){movePlateDown({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,toTowerRef:toTowerRef,requestId:requestId,doneMoveDownCallback:doneMoveDownCallback});});}else{doneMoveDownCallback&&doneMoveDownCallback();}}};","map":{"version":3,"sources":["/Users/apple/the-tower/src/utils.js"],"names":["getTranslateValues","element","style","window","getComputedStyle","matrix","webkitTransform","mozTransform","x","y","z","matrixType","includes","matrixValues","match","split","movePlateUp","currentTimeStamp","start","previousTimeStamp","fromTowerRef","requestId","doneMoveUpCallback","plate","querySelector","maxHeight","offsetHeight","childElementCount","undefined","elapsed","count","Math","min","transform","requestAnimationFrame","timeStamp","movePlateHorizontal","toTowerRef","doneMoveHorizontalCallback","distanceDiff","getBoundingClientRect","left","abs","previousTranslateY","movePlateDown","doneMoveDownCallback","maxDistanceToMove","previousTranslateX","finalTranslateY"],"mappings":"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","sourcesContent":["export function getTranslateValues(element) {\n    const style = window.getComputedStyle(element);\n    const matrix =\n      style[\"transform\"] || style.webkitTransform || style.mozTransform;\n  \n    // No transform property. Simply return 0 values.\n    if (matrix === \"none\" || typeof matrix === \"undefined\") {\n      return {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n    }\n  \n    // Can either be 2d or 3d transform\n    const matrixType = matrix.includes(\"3d\") ? \"3d\" : \"2d\";\n    const matrixValues = matrix.match(/matrix.*\\((.+)\\)/)[1].split(\", \");\n  \n    // 2d matrices have 6 values\n    // Last 2 values are X and Y.\n    // 2d matrices does not have Z value.\n    if (matrixType === \"2d\") {\n      return {\n        x: matrixValues[4],\n        y: matrixValues[5],\n        z: 0\n      };\n    }\n  \n    // 3d matrices have 16 values\n    // The 13th, 14th, and 15th values are X, Y, and Z\n    if (matrixType === \"3d\") {\n      return {\n        x: matrixValues[12],\n        y: matrixValues[13],\n        z: matrixValues[14]\n      };\n    }\n  }\n  \n  export const movePlateUp = ({\n    currentTimeStamp,\n    start,\n    previousTimeStamp,\n    fromTowerRef,\n    requestId,\n    doneMoveUpCallback\n  }) => {\n    const plate = fromTowerRef && fromTowerRef.querySelector(\".plate-track\");\n  \n    if (!plate) return;\n  \n    const maxHeight =\n      fromTowerRef.offsetHeight - (fromTowerRef.childElementCount - 1) * 13;\n    if (start === undefined) start = currentTimeStamp;\n    const elapsed = currentTimeStamp - start;\n  \n    if (previousTimeStamp !== currentTimeStamp) {\n      const count = Math.min(0.7 * elapsed, maxHeight);\n      plate.style.transform = \"translateY(\" + -count + \"px)\";\n  \n      if (count < maxHeight) {\n        previousTimeStamp = currentTimeStamp;\n        requestId = window.requestAnimationFrame((timeStamp) => {\n          movePlateUp({\n            currentTimeStamp: timeStamp,\n            start,\n            previousTimeStamp,\n            fromTowerRef,\n            requestId,\n            doneMoveUpCallback\n          });\n        });\n      } else {\n        start = previousTimeStamp;\n        doneMoveUpCallback && doneMoveUpCallback();\n      }\n    }\n  };\n  \n  export const movePlateHorizontal = ({\n    currentTimeStamp,\n    start,\n    previousTimeStamp,\n    fromTowerRef,\n    toTowerRef,\n    requestId,\n    doneMoveHorizontalCallback\n  }) => {\n    const plate = fromTowerRef && fromTowerRef.querySelector(\".plate-track\");\n  \n    if (!plate) return;\n  \n    const distanceDiff =\n      fromTowerRef.getBoundingClientRect().left -\n      toTowerRef.getBoundingClientRect().left;\n  \n    if (start === undefined) start = currentTimeStamp;\n    const elapsed = currentTimeStamp - start;\n  \n    if (previousTimeStamp !== currentTimeStamp) {\n      let count = Math.min(0.5 * elapsed, Math.abs(distanceDiff));\n  \n      count = distanceDiff > 0 ? -count : count;\n  \n      const previousTranslateY = getTranslateValues(plate)?.y;\n      plate.style.transform = `translate(${count}px, ${previousTranslateY}px)`;\n  \n      if (Math.abs(count) < Math.abs(distanceDiff)) {\n        previousTimeStamp = currentTimeStamp;\n        requestId = window.requestAnimationFrame((timeStamp) => {\n          movePlateHorizontal({\n            currentTimeStamp: timeStamp,\n            start,\n            previousTimeStamp,\n            fromTowerRef,\n            toTowerRef,\n            requestId,\n            doneMoveHorizontalCallback\n          });\n        });\n      } else {\n        start = previousTimeStamp;\n        doneMoveHorizontalCallback && doneMoveHorizontalCallback();\n      }\n    }\n  };\n  \n  export const movePlateDown = ({\n    currentTimeStamp,\n    start,\n    previousTimeStamp,\n    fromTowerRef,\n    toTowerRef,\n    requestId,\n    doneMoveDownCallback\n  }) => {\n    const plate = fromTowerRef && fromTowerRef.querySelector(\".plate-track\");\n    if (!plate) return;\n    const maxDistanceToMove =\n      toTowerRef.offsetHeight - toTowerRef.childElementCount * 13;\n    if (start === undefined) start = currentTimeStamp;\n    const elapsed = currentTimeStamp - start;\n    if (previousTimeStamp !== currentTimeStamp) {\n      let count = 0.7 * elapsed;\n      count = count <= maxDistanceToMove ? count : maxDistanceToMove;\n  \n      const previousTranslateX = getTranslateValues(plate)?.x;\n  \n      let finalTranslateY =\n        -toTowerRef.offsetHeight +\n        13 +\n        13 +\n        count +\n        (fromTowerRef.childElementCount - 3) * 13;\n  \n      if (fromTowerRef === toTowerRef) {\n        finalTranslateY = finalTranslateY + 13;\n      }\n  \n      plate.style.transform = `translate(${previousTranslateX}px, ${finalTranslateY}px)`;\n  \n      if (count < maxDistanceToMove) {\n        previousTimeStamp = currentTimeStamp;\n        requestId = window.requestAnimationFrame((timeStamp) => {\n          movePlateDown({\n            currentTimeStamp: timeStamp,\n            start,\n            previousTimeStamp,\n            fromTowerRef,\n            toTowerRef,\n            requestId,\n            doneMoveDownCallback\n          });\n        });\n      } else {\n        doneMoveDownCallback && doneMoveDownCallback();\n      }\n    }\n  };"]},"metadata":{},"sourceType":"module"}