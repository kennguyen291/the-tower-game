{"ast":null,"code":"var _jsxFileName = \"/Users/apple/the-tower/src/Tower/index.js\";\nimport { forwardRef } from \"react\";\nimport { TOWER_TYPES } from \"../App\";\nimport Plate from \"../Plate\";\nimport FireWork from \"../FireWork\";\nimport winningFlag from \"../images/winning-flag.png\";\nimport styles from \"./styles.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tower = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    name,\n    plateList,\n    onTowerClick,\n    isWin\n  } = _ref;\n  let isFlagShown = false;\n\n  if (name === TOWER_TYPES.destination && isWin) {\n    isFlagShown = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"tower__box\"],\n    title: name,\n    onClick: () => {\n      onTowerClick(name);\n    },\n    ref: ref,\n    children: [plateList.map(plate => /*#__PURE__*/_jsxDEV(Plate, {\n      size: plate.size,\n      color: plate.color,\n      name: plate.name\n    }, plate.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"tower__pole\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"tower__base\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isFlagShown && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: winningFlag,\n      title: \"winning flag\",\n      alt: \"winning flag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), isFlagShown && /*#__PURE__*/_jsxDEV(FireWork, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Tower;\nexport default Tower;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tower$forwardRef\");\n$RefreshReg$(_c2, \"Tower\");","map":{"version":3,"sources":["/Users/apple/the-tower/src/Tower/index.js"],"names":["forwardRef","TOWER_TYPES","Plate","FireWork","winningFlag","styles","Tower","ref","name","plateList","onTowerClick","isWin","isFlagShown","destination","map","plate","size","color"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,gBAAGN,UAAU,MAAC,OAA2CO,GAA3C,KAAmD;AAAA,MAAlD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA;AAAjC,GAAkD;AAC1E,MAAIC,WAAW,GAAG,KAAlB;;AACA,MAAIJ,IAAI,KAAKP,WAAW,CAACY,WAArB,IAAoCF,KAAxC,EAA+C;AAC7CC,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAEP,MAAM,CAAC,YAAD,CADnB;AAEE,IAAA,KAAK,EAAEG,IAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,YAAY,CAACF,IAAD,CAAZ;AACD,KALH;AAME,IAAA,GAAG,EAAED,GANP;AAAA,eAQGE,SAAS,CAACK,GAAV,CAAeC,KAAD,iBACb,QAAC,KAAD;AAEE,MAAA,IAAI,EAAEA,KAAK,CAACC,IAFd;AAGE,MAAA,KAAK,EAAED,KAAK,CAACE,KAHf;AAIE,MAAA,IAAI,EAAEF,KAAK,CAACP;AAJd,OACOO,KAAK,CAACP,IADb;AAAA;AAAA;AAAA;AAAA,YADD,CARH,eAgBE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAAC,aAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAK,MAAA,SAAS,EAAEA,MAAM,CAAC,aAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,YAjBF,EAkBGO,WAAW,iBACV;AACE,MAAA,GAAG,EAAER,WADP;AAEE,MAAA,KAAK,EAAE,cAFT;AAGE,MAAA,GAAG,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA,YAnBJ,EAyBGQ,WAAW,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAzBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnCuB,CAAxB;MAAMN,K;AAqCN,eAAeA,KAAf","sourcesContent":["import { forwardRef } from \"react\";\nimport { TOWER_TYPES } from \"../App\";\n\nimport Plate from \"../Plate\";\nimport FireWork from \"../FireWork\";\nimport winningFlag from \"../images/winning-flag.png\";\n\nimport styles from \"./styles.module.scss\";\n\nconst Tower = forwardRef(({ name, plateList, onTowerClick, isWin }, ref) => {\n  let isFlagShown = false;\n  if (name === TOWER_TYPES.destination && isWin) {\n    isFlagShown = true;\n  }\n\n  return (\n    <div\n      className={styles[\"tower__box\"]}\n      title={name}\n      onClick={() => {\n        onTowerClick(name);\n      }}\n      ref={ref}\n    >\n      {plateList.map((plate) => (\n        <Plate\n          key={plate.name}\n          size={plate.size}\n          color={plate.color}\n          name={plate.name}\n        />\n      ))}\n      <div className={styles[\"tower__pole\"]}></div>\n      <div className={styles[\"tower__base\"]}></div>\n      {isFlagShown && (\n        <img\n          src={winningFlag}\n          title={\"winning flag\"}\n          alt={\"winning flag\"}\n        />\n      )}\n      {isFlagShown && <FireWork />}\n    </div>\n  );\n});\n\nexport default Tower;"]},"metadata":{},"sourceType":"module"}