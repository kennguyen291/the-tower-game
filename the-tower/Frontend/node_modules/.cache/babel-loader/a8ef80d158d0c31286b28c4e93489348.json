{"ast":null,"code":"import _defineProperty from\"/Users/apple/the-tower/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/Users/apple/the-tower/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/apple/the-tower/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/apple/the-tower/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useRef,useCallback}from\"react\";import _isEqual from\"lodash/isEqual\";import{movePlateDown,movePlateUp,movePlateHorizontal}from\"./utils\";import Tower from\"./Tower\";import warningRick from\"./images/warning-rick.png\";import styles from\"./styles.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var plateList=[{name:\"plate 1\",size:\"40\",color:\"red\"},{name:\"plate 2\",size:\"50\",color:\"green\"},{name:\"plate 3\",size:\"60\",color:\"blue\"},{name:\"plate 4\",size:\"70\",color:\"yellow\"}];export var TOWER_TYPES={source:\"source\",auxiliary:\"auxiliary\",destination:\"destination\"};export default function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),typeOfPlate=_useState2[0],setTypeOfPlate=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isWin=_useState4[0],setIsWin=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isDoneMoving=_useState6[0],setIsDoneMoving=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isShowWarning=_useState8[0],setShowWarning=_useState8[1];var _useState9=useState({sourceList:[].concat(plateList),auxiliaryList:[],destinationList:[]}),_useState10=_slicedToArray(_useState9,2),towerState=_useState10[0],setTowerState=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),fromTower=_useState12[0],setFromTower=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),toTower=_useState14[0],setToTower=_useState14[1];var sourceRef=useRef(null);var auxiliaryRef=useRef(null);var destinationRef=useRef(null);var reset=function reset(){setIsWin(false);setIsDoneMoving(true);setShowWarning(false);setTowerState({sourceList:[].concat(plateList),auxiliaryList:[],destinationList:[]});setFromTower(null);setToTower(null);};var moveItem=useCallback(function(towerType,shiftItem){if(!fromTower||!toTower)return;var unShiftTowerName=\"\".concat(TOWER_TYPES[towerType],\"List\");var shiftTowerName=\"\".concat(TOWER_TYPES[fromTower],\"List\");setTowerState(function(prevState){var updatedTowerState=_objectSpread({},prevState);var shiftTower=_toConsumableArray(updatedTowerState[shiftTowerName]);shiftTower.shift();updatedTowerState=_objectSpread(_objectSpread({},updatedTowerState),{},_defineProperty({},shiftTowerName,_toConsumableArray(shiftTower)));var unshiftTower=_toConsumableArray(updatedTowerState[unShiftTowerName]);unshiftTower.unshift(shiftItem);updatedTowerState=_objectSpread(_objectSpread({},updatedTowerState),{},_defineProperty({},unShiftTowerName,_toConsumableArray(unshiftTower)));setFromTower(null);setToTower(null);return _objectSpread({},updatedTowerState);});},[fromTower,toTower]);useEffect(function(){// move()\n},[]);useEffect(function(){if(isShowWarning){setTimeout(function(){setShowWarning(false);},800);}},[isShowWarning]);useEffect(function(){var isWin=false;var destinationList=towerState.destinationList;if(_isEqual(destinationList,plateList)){isWin=true;}setIsWin(isWin);},[towerState]);useEffect(function(){if(!fromTower)return;var requestId;var start;var previousTimeStamp;var fromTowerRef=null;var toTowerRef=null;if(fromTower&&!toTower){switch(fromTower){case TOWER_TYPES.source:fromTowerRef=sourceRef.current;break;case TOWER_TYPES.auxiliary:fromTowerRef=auxiliaryRef.current;break;case TOWER_TYPES.destination:fromTowerRef=destinationRef.current;break;default:}var doneMoveUpCallback=function doneMoveUpCallback(){setIsDoneMoving(true);};setIsDoneMoving(false);requestId=window.requestAnimationFrame(function(timeStamp){movePlateUp({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,requestId:requestId,doneMoveUpCallback:doneMoveUpCallback});});}if(toTower){var _unshiftTower$;switch(toTower){case TOWER_TYPES.source:toTowerRef=sourceRef.current;break;case TOWER_TYPES.auxiliary:toTowerRef=auxiliaryRef.current;break;case TOWER_TYPES.destination:toTowerRef=destinationRef.current;break;default:}switch(fromTower){case TOWER_TYPES.source:fromTowerRef=sourceRef.current;break;case TOWER_TYPES.auxiliary:fromTowerRef=auxiliaryRef.current;break;case TOWER_TYPES.destination:fromTowerRef=destinationRef.current;break;default:}var checkIsValidShift=function checkIsValidShift(towerType){var towerStateName=\"\".concat(TOWER_TYPES[towerType],\"List\");if(updatedTowerState[towerStateName].length>0)return true;return false;};var selectItemToMove=function selectItemToMove(towerType){var isValidToPop=checkIsValidShift(towerType);if(!isValidToPop)return;var towerStateName=\"\".concat(TOWER_TYPES[towerType],\"List\");var tobeShiftItem=updatedTowerState[towerStateName][0];return tobeShiftItem;};var updatedTowerState=_objectSpread({},towerState);var shiftItem=selectItemToMove(fromTower);var doneMoveDownCallback=function doneMoveDownCallback(){moveItem(toTower,shiftItem);setIsDoneMoving(true);};var doneMoveHorizontalCallback=function doneMoveHorizontalCallback(){setIsDoneMoving(false);requestId=window.requestAnimationFrame(function(timeStamp){movePlateDown({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,toTowerRef:toTowerRef,requestId:requestId,doneMoveDownCallback:doneMoveDownCallback});});};var unShiftTowerName=\"\".concat(TOWER_TYPES[toTower],\"List\");var unshiftTower=_toConsumableArray(updatedTowerState[unShiftTowerName]);var isValidShift=(unshiftTower===null||unshiftTower===void 0?void 0:unshiftTower.length)===0||((_unshiftTower$=unshiftTower[0])===null||_unshiftTower$===void 0?void 0:_unshiftTower$.size)>=(shiftItem===null||shiftItem===void 0?void 0:shiftItem.size);if(isValidShift){setIsDoneMoving(false);requestId=window.requestAnimationFrame(function(timeStamp){movePlateHorizontal({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,toTowerRef:toTowerRef,requestId:requestId,doneMoveHorizontalCallback:doneMoveHorizontalCallback});});}else{setShowWarning(true);setIsDoneMoving(true);requestId=window.requestAnimationFrame(function(timeStamp){movePlateDown({currentTimeStamp:timeStamp,start:start,previousTimeStamp:previousTimeStamp,fromTowerRef:fromTowerRef,toTowerRef:fromTowerRef,requestId:requestId,doneMoveDownCallback:function doneMoveDownCallback(){setFromTower(null);setToTower(null);}});});}}return function(){window.cancelAnimationFrame(requestId);};},[fromTower,toTower,moveItem,towerState]);var checkTypeOfPlateText=function checkTypeOfPlateText(typeOfPlate){switch(typeOfPlate){default:return\"Hanoi\";}};var onTowerClickHandler=function onTowerClickHandler(towerType){if(!isDoneMoving)return;if(isWin)return;if(!fromTower){var towerStateName=\"\".concat(TOWER_TYPES[towerType],\"List\");if(towerState[towerStateName].length===0)return;setFromTower(towerType);}else{setToTower(towerType);}};var sourceList=towerState.sourceList,auxiliaryList=towerState.auxiliaryList,destinationList=towerState.destinationList;return/*#__PURE__*/_jsxs(\"div\",{className:styles[\"App\"],children:[/*#__PURE__*/_jsx(\"h1\",{children:\"THE TOWER\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Move all 4 PLATES from TOWER 1 to TOWER 3 to WIN THE GAME.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Notes: smaller plate CAN NOT go underneath a bigger plate.\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"play-box\"],children:[/*#__PURE__*/_jsxs(\"div\",{className:styles[\"wrong-move__wrapper\"],style:{opacity:isShowWarning?\"1\":\"0\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"NO\"}),/*#__PURE__*/_jsx(\"img\",{src:warningRick,title:\"wrong move!\",alt:\"wrong move!\",className:styles[\"warning-rick\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"towers-wrapper\"],children:[/*#__PURE__*/_jsx(Tower,{name:TOWER_TYPES.source,plateList:sourceList,onTowerClick:onTowerClickHandler,ref:sourceRef,isWin:isWin}),/*#__PURE__*/_jsx(Tower,{name:TOWER_TYPES.auxiliary,plateList:auxiliaryList,onTowerClick:onTowerClickHandler,ref:auxiliaryRef,isWin:isWin}),/*#__PURE__*/_jsx(Tower,{name:TOWER_TYPES.destination,plateList:destinationList,onTowerClick:onTowerClickHandler,ref:destinationRef,isWin:isWin})]}),isWin&&/*#__PURE__*/_jsx(\"button\",{className:styles[\"button--restart\"],onClick:reset,children:\"Restart\"})]})]});}","map":{"version":3,"sources":["/Users/apple/the-tower/src/App.js"],"names":["useState","useEffect","useRef","useCallback","_isEqual","movePlateDown","movePlateUp","movePlateHorizontal","Tower","warningRick","styles","plateList","name","size","color","TOWER_TYPES","source","auxiliary","destination","App","typeOfPlate","setTypeOfPlate","isWin","setIsWin","isDoneMoving","setIsDoneMoving","isShowWarning","setShowWarning","sourceList","auxiliaryList","destinationList","towerState","setTowerState","fromTower","setFromTower","toTower","setToTower","sourceRef","auxiliaryRef","destinationRef","reset","moveItem","towerType","shiftItem","unShiftTowerName","shiftTowerName","prevState","updatedTowerState","shiftTower","shift","unshiftTower","unshift","setTimeout","requestId","start","previousTimeStamp","fromTowerRef","toTowerRef","current","doneMoveUpCallback","window","requestAnimationFrame","timeStamp","currentTimeStamp","checkIsValidShift","towerStateName","length","selectItemToMove","isValidToPop","tobeShiftItem","doneMoveDownCallback","doneMoveHorizontalCallback","isValidShift","cancelAnimationFrame","checkTypeOfPlateText","onTowerClickHandler","opacity"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport _isEqual from \"lodash/isEqual\";\nimport { movePlateDown, movePlateUp, movePlateHorizontal } from \"./utils\";\n\nimport Tower from \"./Tower\";\nimport warningRick from \"./images/warning-rick.png\";\n\nimport styles from \"./styles.module.scss\";\n\nconst plateList = [\n  { name: \"plate 1\", size: \"40\", color: \"red\" },\n  { name: \"plate 2\", size: \"50\", color: \"green\" },\n  { name: \"plate 3\", size: \"60\", color: \"blue\" },\n  { name: \"plate 4\", size: \"70\", color: \"yellow\" }\n];\n\nexport const TOWER_TYPES = {\n  source: \"source\",\n  auxiliary: \"auxiliary\",\n  destination: \"destination\"\n};\n\nexport default function App() {\n  const [typeOfPlate, setTypeOfPlate] = useState(\"\");\n  const [isWin, setIsWin] = useState(false);\n  const [isDoneMoving, setIsDoneMoving] = useState(true);\n  const [isShowWarning, setShowWarning] = useState(false);\n\n  const [towerState, setTowerState] = useState({\n    sourceList: [...plateList],\n    auxiliaryList: [],\n    destinationList: []\n  });\n  const [fromTower, setFromTower] = useState(null);\n  const [toTower, setToTower] = useState(null);\n\n  const sourceRef = useRef(null);\n  const auxiliaryRef = useRef(null);\n  const destinationRef = useRef(null);\n\n  const reset = () => {\n    setIsWin(false);\n    setIsDoneMoving(true);\n    setShowWarning(false);\n    setTowerState({\n      sourceList: [...plateList],\n      auxiliaryList: [],\n      destinationList: []\n    });\n    setFromTower(null);\n    setToTower(null);\n  };\n\n  const moveItem = useCallback(\n    (towerType, shiftItem) => {\n      if (!fromTower || !toTower) return;\n      const unShiftTowerName = `${TOWER_TYPES[towerType]}List`;\n      const shiftTowerName = `${TOWER_TYPES[fromTower]}List`;\n\n      setTowerState((prevState) => {\n        let updatedTowerState = { ...prevState };\n\n        const shiftTower = [...updatedTowerState[shiftTowerName]];\n        shiftTower.shift();\n\n        updatedTowerState = {\n          ...updatedTowerState,\n          [shiftTowerName]: [...shiftTower]\n        };\n\n        const unshiftTower = [...updatedTowerState[unShiftTowerName]];\n\n        unshiftTower.unshift(shiftItem);\n\n        updatedTowerState = {\n          ...updatedTowerState,\n          [unShiftTowerName]: [...unshiftTower]\n        };\n\n        setFromTower(null);\n        setToTower(null);\n        return {\n          ...updatedTowerState\n        };\n      });\n    },\n    [fromTower, toTower]\n  );\n\n  useEffect(() => {\n    // move()\n  }, []);\n\n  useEffect(() => {\n    if (isShowWarning) {\n      setTimeout(() => {\n        setShowWarning(false);\n      }, 800);\n    }\n  }, [isShowWarning]);\n\n  useEffect(() => {\n    let isWin = false;\n    const { destinationList } = towerState;\n    if (_isEqual(destinationList, plateList)) {\n      isWin = true;\n    }\n\n    setIsWin(isWin);\n  }, [towerState]);\n\n  useEffect(() => {\n    if (!fromTower) return;\n\n    let requestId;\n\n    let start;\n    let previousTimeStamp;\n    let fromTowerRef = null;\n    let toTowerRef = null;\n\n    if (fromTower && !toTower) {\n      switch (fromTower) {\n        case TOWER_TYPES.source:\n          fromTowerRef = sourceRef.current;\n          break;\n        case TOWER_TYPES.auxiliary:\n          fromTowerRef = auxiliaryRef.current;\n          break;\n        case TOWER_TYPES.destination:\n          fromTowerRef = destinationRef.current;\n          break;\n        default:\n      }\n\n      const doneMoveUpCallback = () => {\n        setIsDoneMoving(true);\n      };\n\n      setIsDoneMoving(false);\n      requestId = window.requestAnimationFrame((timeStamp) => {\n        movePlateUp({\n          currentTimeStamp: timeStamp,\n          start,\n          previousTimeStamp,\n          fromTowerRef,\n          requestId,\n          doneMoveUpCallback\n        });\n      });\n    }\n\n    if (toTower) {\n      switch (toTower) {\n        case TOWER_TYPES.source:\n          toTowerRef = sourceRef.current;\n          break;\n        case TOWER_TYPES.auxiliary:\n          toTowerRef = auxiliaryRef.current;\n          break;\n        case TOWER_TYPES.destination:\n          toTowerRef = destinationRef.current;\n          break;\n        default:\n      }\n\n      switch (fromTower) {\n        case TOWER_TYPES.source:\n          fromTowerRef = sourceRef.current;\n          break;\n        case TOWER_TYPES.auxiliary:\n          fromTowerRef = auxiliaryRef.current;\n          break;\n        case TOWER_TYPES.destination:\n          fromTowerRef = destinationRef.current;\n          break;\n        default:\n      }\n\n      const checkIsValidShift = (towerType) => {\n        const towerStateName = `${TOWER_TYPES[towerType]}List`;\n        if (updatedTowerState[towerStateName].length > 0) return true;\n\n        return false;\n      };\n\n      const selectItemToMove = (towerType) => {\n        const isValidToPop = checkIsValidShift(towerType);\n        if (!isValidToPop) return;\n\n        const towerStateName = `${TOWER_TYPES[towerType]}List`;\n\n        const tobeShiftItem = updatedTowerState[towerStateName][0];\n        return tobeShiftItem;\n      };\n\n      const updatedTowerState = { ...towerState };\n      const shiftItem = selectItemToMove(fromTower);\n\n      const doneMoveDownCallback = () => {\n        moveItem(toTower, shiftItem);\n        setIsDoneMoving(true);\n      };\n\n      const doneMoveHorizontalCallback = () => {\n        setIsDoneMoving(false);\n        requestId = window.requestAnimationFrame((timeStamp) => {\n          movePlateDown({\n            currentTimeStamp: timeStamp,\n            start,\n            previousTimeStamp,\n            fromTowerRef,\n            toTowerRef,\n            requestId,\n            doneMoveDownCallback\n          });\n        });\n      };\n\n      const unShiftTowerName = `${TOWER_TYPES[toTower]}List`;\n\n      const unshiftTower = [...updatedTowerState[unShiftTowerName]];\n\n      const isValidShift =\n        unshiftTower?.length === 0 || unshiftTower[0]?.size >= shiftItem?.size;\n\n      if (isValidShift) {\n        setIsDoneMoving(false);\n        requestId = window.requestAnimationFrame((timeStamp) => {\n          movePlateHorizontal({\n            currentTimeStamp: timeStamp,\n            start,\n            previousTimeStamp,\n            fromTowerRef,\n            toTowerRef,\n            requestId,\n            doneMoveHorizontalCallback\n          });\n        });\n      } else {\n        setShowWarning(true);\n        setIsDoneMoving(true);\n\n        requestId = window.requestAnimationFrame((timeStamp) => {\n          movePlateDown({\n            currentTimeStamp: timeStamp,\n            start,\n            previousTimeStamp,\n            fromTowerRef,\n            toTowerRef: fromTowerRef,\n            requestId,\n            doneMoveDownCallback: () => {\n              setFromTower(null);\n              setToTower(null);\n            }\n          });\n        });\n      }\n    }\n\n    return () => {\n      window.cancelAnimationFrame(requestId);\n    };\n  }, [fromTower, toTower, moveItem, towerState]);\n\n  const checkTypeOfPlateText = (typeOfPlate) => {\n    switch (typeOfPlate) {\n      default:\n        return \"Hanoi\";\n    }\n  };\n\n  const onTowerClickHandler = (towerType) => {\n    if (!isDoneMoving) return;\n\n    if (isWin) return;\n\n    if (!fromTower) {\n      const towerStateName = `${TOWER_TYPES[towerType]}List`;\n      if (towerState[towerStateName].length === 0) return;\n\n      setFromTower(towerType);\n    } else {\n      setToTower(towerType);\n    }\n  };\n\n  const { sourceList, auxiliaryList, destinationList } = towerState;\n\n  return (\n    <div className={styles[\"App\"]}>\n      <h1>THE TOWER</h1>\n      <h2>Move all 4 PLATES from TOWER 1 to TOWER 3 to WIN THE GAME.</h2>\n      <h3>Notes: smaller plate CAN NOT go underneath a bigger plate.</h3>\n      <div className={styles[\"play-box\"]}>\n        <div\n          className={styles[\"wrong-move__wrapper\"]}\n          style={{ opacity: isShowWarning ? \"1\" : \"0\" }}\n        >\n          <strong>NO</strong>\n          <img\n            src={warningRick}\n            title={\"wrong move!\"}\n            alt={\"wrong move!\"}\n            className={styles[\"warning-rick\"]}\n          />\n        </div>\n        <div className={styles[\"towers-wrapper\"]}>\n          <Tower\n            name={TOWER_TYPES.source}\n            plateList={sourceList}\n            onTowerClick={onTowerClickHandler}\n            ref={sourceRef}\n            isWin={isWin}\n          />\n          <Tower\n            name={TOWER_TYPES.auxiliary}\n            plateList={auxiliaryList}\n            onTowerClick={onTowerClickHandler}\n            ref={auxiliaryRef}\n            isWin={isWin}\n          />\n          <Tower\n            name={TOWER_TYPES.destination}\n            plateList={destinationList}\n            onTowerClick={onTowerClickHandler}\n            ref={destinationRef}\n            isWin={isWin}\n          />\n        </div>\n        {isWin && (\n          <button className={styles[\"button--restart\"]} onClick={reset}>\n            Restart\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}